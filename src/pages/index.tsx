import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { formatDistanceToNow } from "date-fns";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";
import { api, type RouterOutputs } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        placeholder="Type some emojis"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostViewPropsType = RouterOutputs["posts"]["getAll"][number];
const PostView = ({ post, author }: PostViewPropsType) => {
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profileImageUrl}
        alt="Profile image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span>Â·</span>
          <span>
            {formatDistanceToNow(post.createdAt, { addSuffix: true })}
          </span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: isLoadingPosts } = api.posts.getAll.useQuery();

  if (isLoadingPosts) return <LoadingPage />;
  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {data?.map(({ post, author }) => (
        <PostView post={post} author={author} key={post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userIsLoaded, isSignedIn } = useUser();

  //Start fetching ASAP so that react query cache's the data
  api.posts.getAll.useQuery();

  //return empty div if user isnt loaded
  if (!userIsLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 ">
            <div className="flex justify-center">
              {!isSignedIn && <SignInButton />}
            </div>
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
          {isSignedIn && <SignOutButton />}
        </div>
      </main>
    </>
  );
};

export default Home;
